
// CoordinatesView.cpp : CCoordinatesView 클래스의 구현
//

#include "stdafx.h"
// SHARED_HANDLERS는 미리 보기, 축소판 그림 및 검색 필터 처리기를 구현하는 ATL 프로젝트에서 정의할 수 있으며
// 해당 프로젝트와 문서 코드를 공유하도록 해 줍니다.
#ifndef SHARED_HANDLERS
#include "Coordinates.h"
#endif

#include "CoordinatesDoc.h"
#include "CoordinatesView.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CCoordinatesView

IMPLEMENT_DYNCREATE(CCoordinatesView, CView)

BEGIN_MESSAGE_MAP(CCoordinatesView, CView)
	// 표준 인쇄 명령입니다.
	ON_COMMAND(ID_FILE_PRINT, &CView::OnFilePrint)
	ON_COMMAND(ID_FILE_PRINT_DIRECT, &CView::OnFilePrint)
	ON_COMMAND(ID_FILE_PRINT_PREVIEW, &CView::OnFilePrintPreview)
	ON_WM_PAINT()
	ON_WM_SIZE()
	ON_WM_MOUSEWHEEL()
	ON_WM_TIMER()
END_MESSAGE_MAP()

// CCoordinatesView 생성/소멸

CCoordinatesView::CCoordinatesView()
{
	// TODO: 여기에 생성 코드를 추가합니다.

}

CCoordinatesView::~CCoordinatesView()
{
}

BOOL CCoordinatesView::PreCreateWindow(CREATESTRUCT& cs)
{
	// TODO: CREATESTRUCT cs를 수정하여 여기에서
	//  Window 클래스 또는 스타일을 수정합니다.

	return CView::PreCreateWindow(cs);
}

// CCoordinatesView 그리기

void CCoordinatesView::OnDraw(CDC* /*pDC*/)
{
	CCoordinatesDoc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	if (!pDoc)
		return;

	// TODO: 여기에 원시 데이터에 대한 그리기 코드를 추가합니다.
}


// CCoordinatesView 인쇄

BOOL CCoordinatesView::OnPreparePrinting(CPrintInfo* pInfo)
{
	// 기본적인 준비
	return DoPreparePrinting(pInfo);
}

void CCoordinatesView::OnBeginPrinting(CDC* /*pDC*/, CPrintInfo* /*pInfo*/)
{
	// TODO: 인쇄하기 전에 추가 초기화 작업을 추가합니다.
}

void CCoordinatesView::OnEndPrinting(CDC* /*pDC*/, CPrintInfo* /*pInfo*/)
{
	// TODO: 인쇄 후 정리 작업을 추가합니다.
}


// CCoordinatesView 진단

#ifdef _DEBUG
void CCoordinatesView::AssertValid() const
{
	CView::AssertValid();
}

void CCoordinatesView::Dump(CDumpContext& dc) const
{
	CView::Dump(dc);
}

CCoordinatesDoc* CCoordinatesView::GetDocument() const // 디버그되지 않은 버전은 인라인으로 지정됩니다.
{
	ASSERT(m_pDocument->IsKindOf(RUNTIME_CLASS(CCoordinatesDoc)));
	return (CCoordinatesDoc*)m_pDocument;
}
#endif //_DEBUG


// CCoordinatesView 메시지 처리기


void CCoordinatesView::OnPaint()
{
	CPaintDC dc(this); // device context for painting
	// TODO: 여기에 메시지 처리기 코드를 추가합니다.
	// 그리기 메시지에 대해서는 CView::OnPaint()을(를) 호출하지 마십시오.
}



//BOOL CCoordinatesView::OnMouseWheel(UINT nFlags, short zDelta, CPoint pt)
//{
//	// TODO: 여기에 메시지 처리기 코드를 추가 및/또는 기본값을 호출합니다.
//	if (zDelta < 0)
//	{
//		m_DlgGrpah.m_LineChartCtrl.iExpand++;
//	}
//	else
//	{
//		m_DlgGrpah.m_LineChartCtrl.iExpand--;
//	}
//	//m_LineChartCtrl.m_aData[0].Add(0, 0, 0);
//	//m_LineChartCtrl.nXDataTotal++;
//	//m_DlgGrpah.m_LineChartCtrl.RedrawWindow();
//
//	return CView::OnMouseWheel(nFlags, zDelta, pt);
//}

